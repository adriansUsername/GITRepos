@model Portfolio.Models.UserViewModel
@using Portfolio.Models
@{
    ViewBag.Title = "UpdateUsers";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <table class="table user-table">
        <thead>
            <tr class="table-dark">
                <th scope="col">@Html.LabelFor(m => m.singleUser.userName)</th>
                <th scope="col">@Html.LabelFor(m => m.singleUser.userPassword)</th>
                <th scope="col">@Html.LabelFor(m => m.singleUser.userFirstName)</th>
                <th scope="col">@Html.LabelFor(m => m.singleUser.userLastName)</th>
                <th scope="col">@Html.LabelFor(m => m.singleUser.userCity)</th>
                <th scope="col">@Html.LabelFor(m => m.singleUser.userState)</th>
                <th scope="col">@Html.LabelFor(m => m.singleUser.userCountry)</th>
                <th scope="col">@Html.LabelFor(m => m.singleUser.userBDay)</th>
                <th scope="col">@Html.LabelFor(m => m.singleUser.userEdited)</th>
                <th scope="col">@Html.LabelFor(m => m.singleUser.userRoleID)</th>
                <th scope="col">Delete</th>
            </tr>
        </thead>

        @{
            for (int i = 0; i < Model.userList.Count; i++)
            {
                <tr>
                    <td>@Html.TextBoxFor(m => m.userList[i].userName)</td>
                    <td>@Html.TextBoxFor(m => m.userList[i].userPassword)</td>
                    <td>@Html.TextBoxFor(m => m.userList[i].userFirstName)</td>
                    <td>@Html.TextBoxFor(m => m.userList[i].userLastName)</td>
                    <td>@Html.TextBoxFor(m => m.userList[i].userCity)</td>
                    <td>@Html.TextBoxFor(m => m.userList[i].userState)</td>
                    <td>@Html.TextBoxFor(m => m.userList[i].userCountry)</td>
                    <td>@Html.EditorFor(m => m.userList[i].userBDay)</td>
                    <td>@Html.EditorFor(m => m.userList[i].userEdited)</td>

                    @{
                        //don't let admin change own role or delete self
                        if (Model.userList[i].userName.Equals(Session["UserName"].ToString()))
                        {
                            <td>@Html.DropDownListFor(m => m.userList[i].userRoleID, new SelectList(Model.roleViewModel.roleList, "roleID", "roleName", Model.userList[i].userRoleID), new { @disabled = "disabled" })</td>
                            <td>@Html.CheckBoxFor(m => m.userList[i].isSelected, new { @disabled = "disabled" })</td>
                        }
                        else
                        {
                            <td>@Html.DropDownListFor(m => m.userList[i].userRoleID, new SelectList(Model.roleViewModel.roleList, "roleID", "roleName", Model.userList[i].userRoleID))</td>
                            <td>@Html.EditorFor(m => m.userList[i].isSelected)</td>
                        }

                        @Html.HiddenFor(m => m.userList[i].userID);
                        @Html.HiddenFor(m => m.userList[i].userDescription);
                    }
                </tr>
            }
        }

    </table>

    <br />
    <input type="submit" value="Save" class="btn btn-dark" />
}